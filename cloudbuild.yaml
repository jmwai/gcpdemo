steps:
# This step runs the unit tests on the app
- name: 'python:3.7-slim'
  id: Test Code
  entrypoint: /bin/sh
  args:
  - -c
  - 'pip install flask && python test_app.py -v'

# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build Image
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/cloud-build-demo:$SHORT_SHA'
  - '.'

# This step pushes the image to Cloud Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push Image
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/cloud-build-demo:$SHORT_SHA'

# This step updates our manifest with the latest image tag
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Set New Image In Manifest'
  entrypoint: /bin/sh
  args: ['-c','sed -i "s,LATEST_IMAGE_TAG,gcr.io/$PROJECT_ID/cloud-build-demo:$SHORT_SHA," deployment.yaml']


# This step deploys to the new version of our container image
# in the cloud-build-demo Kubernetes Engine cluster.
- name: 'gcr.io/cloud-builders/kubectl'
  id: Apply Manifest
  args: 
  - 'apply'
  - '-f'
  - 'deployment.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=cloud-build-demo'
